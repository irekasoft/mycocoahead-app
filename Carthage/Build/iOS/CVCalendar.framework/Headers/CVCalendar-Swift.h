// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.1 clang-703.0.29)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIColor;
@class NSCoder;
@class CVCalendarDayView;

SWIFT_CLASS("_TtC10CVCalendar15CVAuxiliaryView")
@interface CVAuxiliaryView : UIView
@property (nonatomic, strong) UIColor * _Null_unspecified strokeColor;
@property (nonatomic, strong) UIColor * _Null_unspecified fillColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull defaultFillColor;
@property (nonatomic, readonly, assign) CVCalendarDayView * _Nonnull dayView;
- (void)didMoveToSuperview;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
@end


@interface CVAuxiliaryView (SWIFT_EXTENSION(CVCalendar))
- (void)updateFrame:(CGRect)frame;
@end


@interface CVAuxiliaryView (SWIFT_EXTENSION(CVCalendar))
@end

@class CVCalendarView;
@class UIScrollView;
@class CVCalendarMonthView;

SWIFT_CLASS("_TtC10CVCalendar31CVCalendarContentViewController")
@interface CVCalendarContentViewController : UIViewController
@property (nonatomic, readonly, copy) NSString * _Nonnull Previous;
@property (nonatomic, readonly, copy) NSString * _Nonnull Presented;
@property (nonatomic, readonly, copy) NSString * _Nonnull Following;
@property (nonatomic, readonly, strong) CVCalendarView * _Nonnull calendarView;
@property (nonatomic, readonly, strong) UIScrollView * _Nonnull scrollView;
@property (nonatomic, strong) CVCalendarMonthView * _Nonnull presentedMonthView;
@property (nonatomic, readonly) CGRect bounds;
@property (nonatomic) NSInteger currentPage;
@property (nonatomic, readonly) BOOL pageChanged;
@property (nonatomic) BOOL pageLoadingEnabled;
@property (nonatomic) BOOL presentationEnabled;
@property (nonatomic) CGFloat lastContentOffset;
- (nonnull instancetype)initWithCalendarView:(CVCalendarView * _Nonnull)calendarView frame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface CVCalendarContentViewController (SWIFT_EXTENSION(CVCalendar)) <UIScrollViewDelegate>
@end


@interface CVCalendarContentViewController (SWIFT_EXTENSION(CVCalendar))
@end


@interface CVCalendarContentViewController (SWIFT_EXTENSION(CVCalendar))
- (void)refreshPresentedMonth;
@end


@interface CVCalendarContentViewController (SWIFT_EXTENSION(CVCalendar))
- (void)updateFrames:(CGRect)frame;
@end


@interface CVCalendarContentViewController (SWIFT_EXTENSION(CVCalendar))
- (NSInteger)indexOfIdentifier:(NSString * _Nonnull)identifier;
@end


@interface CVCalendarContentViewController (SWIFT_EXTENSION(CVCalendar))
@end


@interface CVCalendarContentViewController (SWIFT_EXTENSION(CVCalendar))
- (void)updateHeight:(CGFloat)height animated:(BOOL)animated;
- (void)updateLayoutIfNeeded;
@end

@class NSDate;

@interface CVCalendarContentViewController (SWIFT_EXTENSION(CVCalendar))
- (void)performedDayViewSelection:(CVCalendarDayView * _Nonnull)dayView;
- (void)togglePresentedDate:(NSDate * _Nonnull)date;
- (void)presentNextView:(UIView * _Nullable)view;
- (void)presentPreviousView:(UIView * _Nullable)view;
- (void)updateDayViews:(BOOL)hidden;
@end

@class CVDate;

@interface CVCalendarContentViewController (SWIFT_EXTENSION(CVCalendar))
- (NSDate * _Nonnull)dateBeforeDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateAfterDate:(NSDate * _Nonnull)date;
- (BOOL)matchedMonths:(CVDate * _Nonnull)lhs :(CVDate * _Nonnull)rhs;
- (BOOL)matchedWeeks:(CVDate * _Nonnull)lhs :(CVDate * _Nonnull)rhs;
- (BOOL)matchedDays:(CVDate * _Nonnull)lhs :(CVDate * _Nonnull)rhs;
@end

@class UILabel;
@class CALayer;
@class CVCalendarWeekView;

SWIFT_CLASS("_TtC10CVCalendar17CVCalendarDayView")
@interface CVCalendarDayView : UIView
@property (nonatomic, weak) CVCalendarWeekView * _Null_unspecified weekView;
@property (nonatomic, strong) CVDate * _Null_unspecified date;
@property (nonatomic, strong) UILabel * _Null_unspecified dayLabel;
@property (nonatomic, strong) CVAuxiliaryView * _Nullable selectionView;
@property (nonatomic, strong) CALayer * _Nullable topMarker;
@property (nonatomic) BOOL isOut;
@property (nonatomic) BOOL isCurrentDay;
@property (nonatomic, readonly, weak) CVCalendarMonthView * _Null_unspecified monthView;
@property (nonatomic, readonly, weak) CVCalendarView * _Null_unspecified calendarView;
@property (nonatomic) CGRect frame;
@property (nonatomic, getter=isHidden) BOOL hidden;
- (nonnull instancetype)initWithWeekView:(CVCalendarWeekView * _Nonnull)weekView weekdayIndex:(NSInteger)weekdayIndex OBJC_DESIGNATED_INITIALIZER;
- (CVDate * _Nonnull)dateWithWeekView:(CVCalendarWeekView * _Nonnull)weekView andWeekIndex:(NSInteger)index;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface CVCalendarDayView (SWIFT_EXTENSION(CVCalendar))
- (void)reloadContent;
@end


@interface CVCalendarDayView (SWIFT_EXTENSION(CVCalendar))
- (void)moveDotMarkerBack:(BOOL)unwinded coloring:(BOOL)coloring;
@end


@interface CVCalendarDayView (SWIFT_EXTENSION(CVCalendar))
@end


@interface CVCalendarDayView (SWIFT_EXTENSION(CVCalendar))
- (CGPoint)pointAtAngle:(CGFloat)angle withinCircleView:(UIView * _Nonnull)circleView;
- (void)moveView:(UIView * _Nonnull)view onCircleView:(UIView * _Nonnull)circleView fromAngle:(CGFloat)angle toAngle:(CGFloat)endAngle straight:(BOOL)straight;
@end


@interface CVCalendarDayView (SWIFT_EXTENSION(CVCalendar))
- (void)setDeselectedWithClearing:(BOOL)clearing;
@end


@interface CVCalendarDayView (SWIFT_EXTENSION(CVCalendar))
- (void)labelSetup;
- (void)preliminarySetup;
- (void)supplementarySetup;
- (void)topMarkerSetup;
- (void)setupDotMarker;
@end

@class UIFont;
@protocol CVCalendarMenuViewDelegate;

SWIFT_CLASS("_TtC10CVCalendar18CVCalendarMenuView")
@interface CVCalendarMenuView : UIView
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull symbols;
@property (nonatomic, copy) NSArray<UILabel *> * _Nullable symbolViews;
@property (nonatomic, strong) UIColor * _Nullable dayOfWeekTextColor;
@property (nonatomic, strong) UIFont * _Nullable dayOfWeekFont;
@property (nonatomic, weak) IBOutlet id _Nullable menuViewDelegate;
@property (nonatomic, weak) id <CVCalendarMenuViewDelegate> _Nullable delegate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setupAppearance;
- (void)setupWeekdaySymbols;
- (void)createDaySymbols;
- (void)commitMenuViewUpdate;
@end

enum CVCalendarWeekday : NSInteger;
enum CVWeekdaySymbolType : NSInteger;

SWIFT_PROTOCOL("_TtP10CVCalendar26CVCalendarMenuViewDelegate_")
@protocol CVCalendarMenuViewDelegate
@optional
- (enum CVCalendarWeekday)firstWeekday;
- (UIColor * _Nonnull)dayOfWeekTextColor;
- (BOOL)dayOfWeekTextUppercase;
- (UIFont * _Nonnull)dayOfWeekFont;
- (enum CVWeekdaySymbolType)weekdaySymbolType;
@end


SWIFT_CLASS("_TtC10CVCalendar36CVCalendarMonthContentViewController")
@interface CVCalendarMonthContentViewController : CVCalendarContentViewController
- (nonnull instancetype)initWithCalendarView:(CVCalendarView * _Nonnull)calendarView frame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCalendarView:(CVCalendarView * _Nonnull)calendarView frame:(CGRect)frame presentedDate:(NSDate * _Nonnull)presentedDate OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)initialLoad:(NSDate * _Nonnull)date;
- (void)reloadMonthViews;
- (void)insertMonthView:(CVCalendarMonthView * _Nonnull)monthView withIdentifier:(NSString * _Nonnull)identifier;
- (void)replaceMonthView:(CVCalendarMonthView * _Nonnull)monthView withIdentifier:(NSString * _Nonnull)identifier animatable:(BOOL)animatable;
- (void)scrolledLeft;
- (void)scrolledRight;
- (void)updateFrames:(CGRect)rect;
- (void)performedDayViewSelection:(CVCalendarDayView * _Nonnull)dayView;
- (void)presentPreviousView:(UIView * _Nullable)view;
- (void)presentNextView:(UIView * _Nullable)view;
- (void)updateDayViews:(BOOL)hidden;
- (void)togglePresentedDate:(NSDate * _Nonnull)date;
@end


@interface CVCalendarMonthContentViewController (SWIFT_EXTENSION(CVCalendar))
- (CVCalendarMonthView * _Nonnull)getFollowingMonth:(NSDate * _Nonnull)date;
- (CVCalendarMonthView * _Nonnull)getPreviousMonth:(NSDate * _Nonnull)date;
@end


@interface CVCalendarMonthContentViewController (SWIFT_EXTENSION(CVCalendar))
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
@end


@interface CVCalendarMonthContentViewController (SWIFT_EXTENSION(CVCalendar))
- (void)prepareTopMarkersOnMonthView:(CVCalendarMonthView * _Nonnull)monthView hidden:(BOOL)hidden;
- (void)setDayOutViewsVisible:(BOOL)visible;
- (void)updateSelection;
- (void)selectDayViewWithDay:(NSInteger)day inMonthView:(CVCalendarMonthView * _Nonnull)monthView;
@end


SWIFT_CLASS("_TtC10CVCalendar19CVCalendarMonthView")
@interface CVCalendarMonthView : UIView
@property (nonatomic) CGRect frame;
@property (nonatomic, weak) CVCalendarView * _Null_unspecified calendarView;
@property (nonatomic, strong) NSDate * _Null_unspecified date;
@property (nonatomic, copy) NSArray<CVCalendarWeekView *> * _Null_unspecified weekViews;
@property (nonatomic, copy) NSArray<NSDictionary<NSNumber *, NSArray<NSNumber *> *> *> * _Nullable weeksIn;
@property (nonatomic, copy) NSArray<NSDictionary<NSNumber *, NSArray<NSNumber *> *> *> * _Nullable weeksOut;
@property (nonatomic, readonly) CGSize potentialSize;
- (nonnull instancetype)initWithCalendarView:(CVCalendarView * _Nonnull)calendarView date:(NSDate * _Nonnull)date OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)mapDayViews:(void (^ _Nonnull)(CVCalendarDayView * _Nonnull))body;
@end


@interface CVCalendarMonthView (SWIFT_EXTENSION(CVCalendar))
@end


@interface CVCalendarMonthView (SWIFT_EXTENSION(CVCalendar))
- (void)reloadViewsWithRect:(CGRect)frame;
@end


@interface CVCalendarMonthView (SWIFT_EXTENSION(CVCalendar))
- (void)commonInit;
@end


@interface CVCalendarMonthView (SWIFT_EXTENSION(CVCalendar))
- (void)updateAppearance:(CGRect)frame;
- (void)createWeekViews;
@end

@class UILongPressGestureRecognizer;
@class UITapGestureRecognizer;

@interface CVCalendarMonthView (SWIFT_EXTENSION(CVCalendar))
- (void)updateInteractiveView;
- (void)didPressInteractiveView:(UILongPressGestureRecognizer * _Nonnull)recognizer;
- (void)didTouchInteractiveView:(UITapGestureRecognizer * _Nonnull)recognizer;
@end

@class CVCalendarViewAppearance;
@protocol CVCalendarViewDelegate;

SWIFT_CLASS("_TtC10CVCalendar14CVCalendarView")
@interface CVCalendarView : UIView
@property (nonatomic, strong) CVCalendarViewAppearance * _Null_unspecified appearance;
@property (nonatomic, strong) CVCalendarContentViewController * _Null_unspecified contentController;
@property (nonatomic, readonly) enum CVCalendarWeekday firstWeekday;
@property (nonatomic, strong) CVDate * _Null_unspecified presentedDate;
@property (nonatomic, readonly) BOOL shouldAnimateResizing;
@property (nonatomic, readonly) BOOL shouldAutoSelectDayOnMonthChange;
@property (nonatomic, readonly) BOOL shouldAutoSelectDayOnWeekChange;
@property (nonatomic, readonly) BOOL shouldScrollOnOutDayViewSelection;
@property (nonatomic, weak) IBOutlet id _Nullable calendarDelegate;
@property (nonatomic, weak) id <CVCalendarViewDelegate> _Nullable delegate;
@property (nonatomic, weak) IBOutlet id _Nullable calendarAppearanceDelegate;
@property (nonatomic, weak) IBOutlet id _Nullable animatorDelegate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;

/// IB Initialization
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface CVCalendarView (SWIFT_EXTENSION(CVCalendar))
@end


@interface CVCalendarView (SWIFT_EXTENSION(CVCalendar))
- (void)commitCalendarViewUpdate;
@end


@interface CVCalendarView (SWIFT_EXTENSION(CVCalendar))
- (void)didSelectDayView:(CVCalendarDayView * _Nonnull)dayView;
@end

enum CVCalendarViewPresentationMode : NSInteger;

@interface CVCalendarView (SWIFT_EXTENSION(CVCalendar))
- (void)changeDaysOutShowingState:(BOOL)shouldShow;
- (void)toggleViewWithDate:(NSDate * _Nonnull)date;
- (void)toggleCurrentDayView;
- (void)loadNextView;
- (void)loadPreviousView;
- (void)changeMode:(enum CVCalendarViewPresentationMode)mode completion:(void (^ _Nonnull)(void))completion;
@end


SWIFT_PROTOCOL("_TtP10CVCalendar30CVCalendarViewAnimatorDelegate_")
@protocol CVCalendarViewAnimatorDelegate
- (void (^ _Nonnull)(CVCalendarDayView * _Nonnull, void (^ _Nonnull)(BOOL)))selectionAnimation;
- (void (^ _Nonnull)(CVCalendarDayView * _Nonnull, void (^ _Nonnull)(BOOL)))deselectionAnimation;
@end

@protocol CVCalendarViewAppearanceDelegate;

SWIFT_CLASS("_TtC10CVCalendar24CVCalendarViewAppearance")
@interface CVCalendarViewAppearance : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIFont * _Nullable dayLabelWeekdayFont;
@property (nonatomic, strong) UIFont * _Nullable dayLabelPresentWeekdayFont;
@property (nonatomic, strong) UIFont * _Nullable dayLabelPresentWeekdayBoldFont;
@property (nonatomic, strong) UIFont * _Nullable dayLabelPresentWeekdayHighlightedFont;
@property (nonatomic, strong) UIFont * _Nullable dayLabelPresentWeekdaySelectedFont;
@property (nonatomic, strong) UIFont * _Nullable dayLabelWeekdayHighlightedFont;
@property (nonatomic, strong) UIFont * _Nullable dayLabelWeekdaySelectedFont;

/// Default text color.
@property (nonatomic, strong) UIColor * _Nullable dayLabelWeekdayInTextColor;
@property (nonatomic, strong) UIColor * _Nullable dayLabelWeekdayOutTextColor;
@property (nonatomic, strong) UIColor * _Nullable dayLabelWeekdayHighlightedTextColor;
@property (nonatomic, strong) UIColor * _Nullable dayLabelWeekdaySelectedTextColor;
@property (nonatomic, strong) UIColor * _Nullable dayLabelPresentWeekdayTextColor;
@property (nonatomic, strong) UIColor * _Nullable dayLabelPresentWeekdayHighlightedTextColor;
@property (nonatomic, strong) UIColor * _Nullable dayLabelPresentWeekdaySelectedTextColor;

/// Default highlighted state background & alpha.
@property (nonatomic, strong) UIColor * _Nullable dayLabelWeekdayHighlightedBackgroundColor;
@property (nonatomic, strong) UIColor * _Nullable dayLabelPresentWeekdayHighlightedBackgroundColor;

/// Default selected state background & alpha.
@property (nonatomic, strong) UIColor * _Nullable dayLabelWeekdaySelectedBackgroundColor;
@property (nonatomic, strong) UIColor * _Nullable dayLabelPresentWeekdaySelectedBackgroundColor;
@property (nonatomic, strong) UIColor * _Nullable dotMarkerColor;
@property (nonatomic, weak) id <CVCalendarViewAppearanceDelegate> _Nullable delegate;
- (void)setupAppearance;
@end


SWIFT_PROTOCOL("_TtP10CVCalendar32CVCalendarViewAppearanceDelegate_")
@protocol CVCalendarViewAppearanceDelegate
@optional

/// Rendering options.
- (CGFloat)spaceBetweenWeekViews;
- (CGFloat)spaceBetweenDayViews;

/// Font options.
- (BOOL)dayLabelPresentWeekdayInitallyBold;
- (UIFont * _Nonnull)dayLabelWeekdayFont;
- (UIFont * _Nonnull)dayLabelPresentWeekdayFont;
- (UIFont * _Nonnull)dayLabelPresentWeekdayBoldFont;
- (UIFont * _Nonnull)dayLabelPresentWeekdayHighlightedFont;
- (UIFont * _Nonnull)dayLabelPresentWeekdaySelectedFont;
- (UIFont * _Nonnull)dayLabelWeekdayHighlightedFont;
- (UIFont * _Nonnull)dayLabelWeekdaySelectedFont;

/// Text color.
- (UIColor * _Nonnull)dayLabelWeekdayInTextColor;
- (UIColor * _Nonnull)dayLabelWeekdayOutTextColor;
- (UIColor * _Nonnull)dayLabelWeekdayHighlightedTextColor;
- (UIColor * _Nonnull)dayLabelWeekdaySelectedTextColor;
- (UIColor * _Nonnull)dayLabelPresentWeekdayTextColor;
- (UIColor * _Nonnull)dayLabelPresentWeekdayHighlightedTextColor;
- (UIColor * _Nonnull)dayLabelPresentWeekdaySelectedTextColor;

/// Text size.
- (CGFloat)dayLabelWeekdayTextSize;
- (CGFloat)dayLabelWeekdayHighlightedTextSize;
- (CGFloat)dayLabelWeekdaySelectedTextSize;
- (CGFloat)dayLabelPresentWeekdayTextSize;
- (CGFloat)dayLabelPresentWeekdayHighlightedTextSize;
- (CGFloat)dayLabelPresentWeekdaySelectedTextSize;

/// Highlighted state background & alpha.
- (UIColor * _Nonnull)dayLabelWeekdayHighlightedBackgroundColor;
- (CGFloat)dayLabelWeekdayHighlightedBackgroundAlpha;
- (UIColor * _Nonnull)dayLabelPresentWeekdayHighlightedBackgroundColor;
- (CGFloat)dayLabelPresentWeekdayHighlightedBackgroundAlpha;

/// Selected state background & alpha.
- (UIColor * _Nonnull)dayLabelWeekdaySelectedBackgroundColor;
- (CGFloat)dayLabelWeekdaySelectedBackgroundAlpha;
- (UIColor * _Nonnull)dayLabelPresentWeekdaySelectedBackgroundColor;
- (CGFloat)dayLabelPresentWeekdaySelectedBackgroundAlpha;

/// Dot marker default color.
- (UIColor * _Nonnull)dotMarkerColor;
@end

@class UIBezierPath;

SWIFT_PROTOCOL("_TtP10CVCalendar22CVCalendarViewDelegate_")
@protocol CVCalendarViewDelegate
- (enum CVCalendarViewPresentationMode)presentationMode;
- (enum CVCalendarWeekday)firstWeekday;
@optional

/// Determines whether resizing should cause related views' animation.
- (BOOL)shouldAnimateResizing;
- (BOOL)shouldScrollOnOutDayViewSelection;
- (BOOL)shouldAutoSelectDayOnWeekChange;
- (BOOL)shouldAutoSelectDayOnMonthChange;
- (BOOL)shouldShowWeekdaysOut;
- (void)didSelectDayView:(CVCalendarDayView * _Nonnull)dayView animationDidFinish:(BOOL)animationDidFinish;
- (void)presentedDateUpdated:(CVDate * _Nonnull)date;
- (BOOL)topMarkerWithShouldDisplayOnDayView:(CVCalendarDayView * _Nonnull)dayView;
- (BOOL)dotMarkerWithShouldMoveOnHighlightingOnDayView:(CVCalendarDayView * _Nonnull)dayView;
- (BOOL)dotMarkerWithShouldShowOnDayView:(CVCalendarDayView * _Nonnull)dayView;
- (NSArray<UIColor *> * _Nonnull)dotMarkerWithColorOnDayView:(CVCalendarDayView * _Nonnull)dayView;
- (CGFloat)dotMarkerWithMoveOffsetOnDayView:(CVCalendarDayView * _Nonnull)dayView;
- (CGFloat)dotMarkerWithSizeOnDayView:(CVCalendarDayView * _Nonnull)dayView;
- (UIBezierPath * _Nonnull (^ _Nonnull)(CGRect))selectionViewPath;
- (BOOL)shouldShowCustomSingleSelection;
- (UIView * _Nonnull)preliminaryViewWithViewOnDayView:(CVCalendarDayView * _Nonnull)dayView;
- (BOOL)preliminaryViewWithShouldDisplayOnDayView:(CVCalendarDayView * _Nonnull)dayView;
- (UIView * _Nonnull)supplementaryViewWithViewOnDayView:(CVCalendarDayView * _Nonnull)dayView;
- (BOOL)supplementaryViewWithShouldDisplayOnDayView:(CVCalendarDayView * _Nonnull)dayView;
- (void)didShowNextMonthView:(NSDate * _Nonnull)date;
- (void)didShowPreviousMonthView:(NSDate * _Nonnull)date;
@end

typedef SWIFT_ENUM(NSInteger, CVCalendarViewPresentationMode) {
  CVCalendarViewPresentationModeMonthView = 0,
  CVCalendarViewPresentationModeWeekView = 1,
};


SWIFT_CLASS("_TtC10CVCalendar35CVCalendarWeekContentViewController")
@interface CVCalendarWeekContentViewController : CVCalendarContentViewController
- (nonnull instancetype)initWithCalendarView:(CVCalendarView * _Nonnull)calendarView frame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCalendarView:(CVCalendarView * _Nonnull)calendarView frame:(CGRect)frame presentedDate:(NSDate * _Nonnull)presentedDate OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)initialLoad:(NSDate * _Nonnull)date;
- (void)reloadWeekViews;
- (void)insertWeekView:(CVCalendarWeekView * _Nonnull)weekView withIdentifier:(NSString * _Nonnull)identifier;
- (void)replaceWeekView:(CVCalendarWeekView * _Nonnull)weekView withIdentifier:(NSString * _Nonnull)identifier animatable:(BOOL)animatable;
- (void)scrolledLeft;
- (void)scrolledRight;
- (void)updateFrames:(CGRect)rect;
- (void)performedDayViewSelection:(CVCalendarDayView * _Nonnull)dayView;
- (void)presentPreviousView:(UIView * _Nullable)view;
- (void)presentNextView:(UIView * _Nullable)view;
- (void)updateDayViews:(BOOL)hidden;
- (void)togglePresentedDate:(NSDate * _Nonnull)date;
@end


@interface CVCalendarWeekContentViewController (SWIFT_EXTENSION(CVCalendar))
- (CVCalendarMonthView * _Nonnull)getFollowingMonth:(NSDate * _Nonnull)date;
- (CVCalendarMonthView * _Nonnull)getPreviousMonth:(NSDate * _Nonnull)date;
@end


@interface CVCalendarWeekContentViewController (SWIFT_EXTENSION(CVCalendar))
- (CVCalendarWeekView * _Nullable)getPresentedWeek;
- (CVCalendarWeekView * _Nonnull)getPreviousWeek:(CVCalendarWeekView * _Nonnull)presentedWeekView;
- (CVCalendarWeekView * _Nonnull)getFollowingWeek:(CVCalendarWeekView * _Nonnull)presentedWeekView;
@end


@interface CVCalendarWeekContentViewController (SWIFT_EXTENSION(CVCalendar))
- (void)prepareTopMarkersOnWeekView:(CVCalendarWeekView * _Nonnull)weekView hidden:(BOOL)hidden;
- (void)setDayOutViewsVisible:(BOOL)visible;
- (void)updateSelection;
- (void)selectDayViewWithDay:(NSInteger)day inWeekView:(CVCalendarWeekView * _Nonnull)weekView;
@end


@interface CVCalendarWeekContentViewController (SWIFT_EXTENSION(CVCalendar))
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
@end


SWIFT_CLASS("_TtC10CVCalendar18CVCalendarWeekView")
@interface CVCalendarWeekView : UIView
@property (nonatomic) CGRect frame;
@property (nonatomic, weak) CVCalendarMonthView * _Null_unspecified monthView;
@property (nonatomic, copy) NSArray<CVCalendarDayView *> * _Null_unspecified dayViews;
@property (nonatomic, copy) NSDictionary<NSNumber *, NSArray<NSNumber *> *> * _Nullable weekdaysIn;
@property (nonatomic, copy) NSDictionary<NSNumber *, NSArray<NSNumber *> *> * _Nullable weekdaysOut;
@property (nonatomic) BOOL utilizable;

/// Recovery service.
@property (nonatomic, readonly, weak) CVCalendarView * _Null_unspecified calendarView;
- (nonnull instancetype)initWithMonthView:(CVCalendarMonthView * _Nonnull)monthView index:(NSInteger)index OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)mapDayViews:(void (^ _Nonnull)(CVCalendarDayView * _Nonnull))body;
@end


@interface CVCalendarWeekView (SWIFT_EXTENSION(CVCalendar))
@end


@interface CVCalendarWeekView (SWIFT_EXTENSION(CVCalendar))
- (void)createDayViews;
- (void)reloadDayViews;
@end


@interface CVCalendarWeekView (SWIFT_EXTENSION(CVCalendar))
- (void)updateInteractiveView;
- (void)didPressInteractiveView:(UILongPressGestureRecognizer * _Nonnull)recognizer;
- (void)didTouchInteractiveView:(UITapGestureRecognizer * _Nonnull)recognizer;
@end

typedef SWIFT_ENUM(NSInteger, CVCalendarWeekday) {
  CVCalendarWeekdaySunday = 1,
  CVCalendarWeekdayMonday = 2,
  CVCalendarWeekdayTuesday = 3,
  CVCalendarWeekdayWednesday = 4,
  CVCalendarWeekdayThursday = 5,
  CVCalendarWeekdayFriday = 6,
  CVCalendarWeekdaySaturday = 7,
};


SWIFT_CLASS("_TtC10CVCalendar6CVDate")
@interface CVDate : NSObject
@property (nonatomic, readonly) NSInteger year;
@property (nonatomic, readonly) NSInteger month;
@property (nonatomic, readonly) NSInteger week;
@property (nonatomic, readonly) NSInteger day;
- (nonnull instancetype)initWithDate:(NSDate * _Nonnull)date OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDay:(NSInteger)day month:(NSInteger)month week:(NSInteger)week year:(NSInteger)year OBJC_DESIGNATED_INITIALIZER;
@end


@interface CVDate (SWIFT_EXTENSION(CVCalendar))
@end


@interface CVDate (SWIFT_EXTENSION(CVCalendar))
- (NSDate * _Nullable)convertedDate;
@end


@interface CVDate (SWIFT_EXTENSION(CVCalendar))
@property (nonatomic, readonly, copy) NSString * _Nonnull globalDescription;
@property (nonatomic, readonly, copy) NSString * _Nonnull commonDescription;
@end

typedef SWIFT_ENUM(NSInteger, CVWeekdaySymbolType) {
  CVWeekdaySymbolTypeNormal = 0,
  CVWeekdaySymbolTypeShort = 1,
  CVWeekdaySymbolTypeVeryShort = 2,
};


@interface UIColor (SWIFT_EXTENSION(CVCalendar))
+ (UIColor * _Nonnull)colorFromCode:(NSInteger)code;
@end


@interface UIView (SWIFT_EXTENSION(CVCalendar))
- (void)removeAllSubviews;
@end

#pragma clang diagnostic pop
